{"version":3,"sources":["uni-app:///main.js","webpack:///H:/测试小程序/pages/chat/chat.vue?733f","webpack:///H:/测试小程序/pages/chat/chat.vue?23c9","webpack:///H:/测试小程序/pages/chat/chat.vue?18fa","webpack:///H:/测试小程序/pages/chat/chat.vue?bdde","uni-app:///pages/chat/chat.vue","webpack:///H:/测试小程序/pages/chat/chat.vue?3c5a","webpack:///H:/测试小程序/pages/chat/chat.vue?e51f"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","targetUserId","targetUserName","messages","inputContent","scrollTop","refreshing","page","pageSize","hasMore","loading","computed","groupedMessages","onLoad","onShow","console","methods","loadMessages","reset","userId","uni","title","icon","uniCloud","name","res","list","setTimeout","sendMessage","content","type","auditRes","sendTime","formatTime","scrollToBottom","query","loadMore","onRefresh","goBack","handleAvatarError","item","showMessageActions","actions","itemList","success","message","deleteMessage","messageId","handleReport","reportTypes","action","targetId","reason","reporterId","contentType","result","checkAuth","formatDate","yesterday","groupMessagesByTime","currentDate","currentGroup","date","grouped","getMessageDateHeader"],"mappings":"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","file":"pages/chat/chat.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;import '@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js';\nimport Vue from 'vue'\nimport Page from './pages/chat/chat.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./chat.vue?vue&type=template&id=bf16e7f4&\"\nvar renderjs\nimport script from \"./chat.vue?vue&type=script&lang=js&\"\nexport * from \"./chat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chat.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/chat/chat.vue\"\nexport default component.exports","export * from \"-!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./chat.vue?vue&type=template&id=bf16e7f4&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = _vm.messages.length\n  var g1 = _vm.inputContent.trim()\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n        g1: g1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./chat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./chat.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"chat-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <view class=\"nav-bar\">\r\n      <uni-icons type=\"arrow-left\" size=\"30\" color=\"#333\" @tap=\"goBack\"/>\r\n      <text class=\"nav-title\">{{targetUserName}}</text>\r\n    </view>\r\n    \r\n    <!-- 聊天消息列表 -->\r\n    <scroll-view \r\n      scroll-y \r\n      class=\"message-list\"\r\n      :scroll-top=\"scrollTop\"\r\n      @scrolltolower=\"loadMore\"\r\n      :refresher-triggered=\"refreshing\"\r\n      @refresherrefresh=\"onRefresh\"\r\n    >\r\n      <view v-if=\"messages.length === 0\" class=\"empty-state\">\r\n        <text>暂无消息，开始聊天吧</text>\r\n      </view>\r\n      \r\n      <view v-else class=\"message-container\">\r\n        <!-- 添加消息分组和时间显示 -->\r\n        <block v-for=\"(group, groupIndex) in groupedMessages\" :key=\"groupIndex\">\r\n          <!-- 消息时间显示在中间 -->\r\n          <view class=\"time-divider\">\r\n            <text>{{group.date}}</text>\r\n          </view>\r\n          \r\n          <!-- 该组的消息列表 -->\r\n          <view \r\n            v-for=\"(item, index) in group.messages\" \r\n            :key=\"item._id\"\r\n            :class=\"['message-item', item.isSelf ? 'self' : 'other']\"\r\n            @longpress=\"showMessageActions(item)\"\r\n          >\r\n            <image \r\n              class=\"avatar\" \r\n              :src=\"item.userInfo.avatar || '/static/images/avatar/default.png'\" \r\n              mode=\"aspectFill\"\r\n              @error=\"handleAvatarError(e, item)\"\r\n            />\r\n            <view class=\"message-content\">\r\n              <text class=\"message-text\">{{item.content}}</text>\r\n            </view>\r\n          </view>\r\n        </block>\r\n      </view>\r\n    </scroll-view>\r\n    \r\n    <!-- 输入框区域 -->\r\n    <view class=\"input-area\">\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"inputContent\"\r\n        placeholder=\"请输入消息\"\r\n        @confirm=\"sendMessage\"\r\n      />\r\n      <button \r\n        class=\"send-btn\" \r\n        :disabled=\"!inputContent.trim()\"\r\n        @tap=\"sendMessage\"\r\n      >发送</button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      targetUserId: '',\r\n      targetUserName: '',\r\n      messages: [],\r\n      inputContent: '',\r\n      scrollTop: 0,\r\n      refreshing: false,\r\n      page: 1,\r\n      pageSize: 20,\r\n      hasMore: true,\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    groupedMessages() {\r\n      return this.groupMessagesByTime();\r\n    }\r\n  },\r\n  onLoad(options) {\r\n    this.targetUserId = options.targetUserId;\r\n    this.targetUserName = decodeURIComponent(options.targetUserName || '用户');\r\n    this.loadMessages(true);\r\n  },\r\n  onShow() {\r\n    console.log('聊天页面显示，刷新消息');\r\n    this.loadMessages(true);\r\n  },\r\n  methods: {\r\n    async loadMessages(reset = false) {\r\n      if (this.loading && !reset) return;\r\n      \r\n      this.loading = true;\r\n      \r\n      if (reset) {\r\n        this.page = 1;\r\n        this.messages = [];\r\n        this.hasMore = true;\r\n      }\r\n      \r\n      if (!this.hasMore && !reset) {\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const userId = uni.getStorageSync('userId');\r\n        if (!userId) {\r\n          uni.showToast({\r\n            title: '请先登录',\r\n            icon: 'none'\r\n          });\r\n          return;\r\n        }\r\n        \r\n        console.log('开始加载聊天消息，参数：', {\r\n          userId,\r\n          targetUserId: this.targetUserId,\r\n          page: this.page,\r\n          pageSize: this.pageSize\r\n        });\r\n        \r\n        const res = await uniCloud.callFunction({\r\n          name: 'getChatMessages',\r\n          data: {\r\n            userId: userId,\r\n            targetUserId: this.targetUserId,\r\n            page: this.page,\r\n            pageSize: this.pageSize\r\n          }\r\n        });\r\n        \r\n        console.log('获取聊天消息结果：', JSON.stringify(res.result));\r\n        \r\n        if (res.result && res.result.code === 0) {\r\n          const data = res.result.data || {};\r\n          const list = data.list || [];\r\n          const hasMore = !!data.hasMore;\r\n          \r\n          console.log('获取到的聊天消息列表：', list.length, '条消息');\r\n          \r\n          if (list && list.length > 0) {\r\n            this.$nextTick(() => {\r\n              if (reset) {\r\n                this.messages = list;\r\n              } else {\r\n                // 确保消息顺序正确（旧消息在上，新消息在下）\r\n                this.messages = [...list, ...this.messages];\r\n              }\r\n              console.log('更新后的聊天消息列表：', this.messages.length, '条消息');\r\n              \r\n              // 强制刷新视图\r\n              this.$forceUpdate();\r\n              \r\n              // 重置滚动位置\r\n              if (reset) {\r\n                setTimeout(() => {\r\n                  this.scrollToBottom();\r\n                }, 300);\r\n              }\r\n            });\r\n          } else if (reset) {\r\n            // 如果是重置且没有消息，确保消息列表为空\r\n            this.messages = [];\r\n          }\r\n          \r\n          this.hasMore = hasMore;\r\n          \r\n          if (hasMore && list.length > 0) {\r\n            this.page++;\r\n          }\r\n        } else {\r\n          throw new Error((res.result && res.result.msg) || '获取消息失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取消息失败:', error);\r\n        uni.showToast({\r\n          title: error.message || '获取消息失败',\r\n          icon: 'none'\r\n        });\r\n      } finally {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.refreshing = false;\r\n        }, 300);\r\n      }\r\n    },\r\n    \r\n    async sendMessage() {\r\n      if (!this.inputContent.trim()) return;\r\n      \r\n      const content = this.inputContent.trim();\r\n      this.inputContent = '';\r\n      \r\n      try {\r\n        // 1. 内容审核\r\n        const auditRes = await uniCloud.callFunction({\r\n          name: 'contentAudit',\r\n          data: {\r\n            content: content,\r\n            type: 'message'\r\n          }\r\n        });\r\n        \r\n        if (!auditRes.result.data.pass) {\r\n          throw new Error('内容审核未通过：' + auditRes.result.data.reasons.join('、'));\r\n        }\r\n        \r\n        // 2. 发送消息\r\n        const userId = uni.getStorageSync('userId');\r\n        const res = await uniCloud.callFunction({\r\n          name: 'sendMessage',\r\n          data: {\r\n            userId: userId,\r\n            targetUserId: this.targetUserId,\r\n            content: content,\r\n            sendTime: Date.now()\r\n          }\r\n        });\r\n        \r\n        if (res.result.code === 0) {\r\n          // 发送成功后刷新消息列表\r\n          this.loadMessages(true);\r\n        } else {\r\n          throw new Error(res.result.msg);\r\n        }\r\n      } catch (error) {\r\n        uni.showToast({\r\n          title: error.message || '发送失败',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    formatTime(timestamp) {\r\n      if (!timestamp) return '';\r\n      const date = new Date(timestamp);\r\n      const hours = date.getHours().toString().padStart(2, '0');\r\n      const minutes = date.getMinutes().toString().padStart(2, '0');\r\n      return hours + ':' + minutes;\r\n    },\r\n    \r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        // 简化滚动方法，避免使用复杂的查询\r\n        try {\r\n          const query = uni.createSelectorQuery().in(this);\r\n          query.select('.message-container').boundingClientRect(data => {\r\n            if (data && data.height) {\r\n              console.log('滚动容器高度:', data.height);\r\n              this.scrollTop = data.height + 1000; // 添加足够大的值确保滚动到底部\r\n            }\r\n          }).exec();\r\n        } catch (e) {\r\n          console.error('滚动计算错误:', e);\r\n          // 如果查询失败，使用一个较大的值直接滚动\r\n          this.scrollTop = 10000;\r\n        }\r\n      });\r\n    },\r\n    \r\n    loadMore() {\r\n      if (this.hasMore) {\r\n        this.page++;\r\n        this.loadMessages();\r\n      }\r\n    },\r\n    \r\n    async onRefresh() {\r\n      this.refreshing = true;\r\n      await this.loadMessages(true);\r\n    },\r\n    \r\n    goBack() {\r\n      uni.navigateBack();\r\n    },\r\n    \r\n    // 处理头像加载错误\r\n    handleAvatarError(e, item) {\r\n      // 直接给消息对象修改头像属性\r\n      if (item && item.userInfo) {\r\n        item.userInfo.avatar = '/static/images/avatar/default.png';\r\n      }\r\n    },\r\n    \r\n    // 显示消息操作菜单\r\n    showMessageActions(message) {\r\n      const userId = uni.getStorageSync('userId');\r\n      if (!userId) {\r\n        uni.showToast({\r\n          title: '请先登录',\r\n          icon: 'none'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const actions = [];\r\n      \r\n      // 如果是自己的消息，显示删除选项\r\n      if (message.isSelf) {\r\n        actions.push('删除');\r\n      } else {\r\n        // 如果是他人的消息，显示举报选项\r\n        actions.push('举报');\r\n      }\r\n      \r\n      if (actions.length === 0) return;\r\n      \r\n      uni.showActionSheet({\r\n        itemList: actions,\r\n        success: async (res) => {\r\n          if (message.isSelf && res.tapIndex === 0) {\r\n            // 删除消息\r\n            await this.deleteMessage(message._id);\r\n          } else if (!message.isSelf && res.tapIndex === 0) {\r\n            // 举报消息\r\n            this.handleReport(message);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 删除消息\r\n    async deleteMessage(messageId) {\r\n      try {\r\n        const userId = uni.getStorageSync('userId');\r\n        if (!userId) {\r\n          throw new Error('请先登录');\r\n        }\r\n        \r\n        const res = await uniCloud.callFunction({\r\n          name: 'deleteMessage',\r\n          data: {\r\n            messageId,\r\n            userId\r\n          }\r\n        });\r\n        \r\n        if (res.result.code === 0) {\r\n          // 删除成功后从本地消息列表中移除\r\n          this.messages = this.messages.filter(msg => msg._id !== messageId);\r\n          uni.showToast({\r\n            title: '删除成功',\r\n            icon: 'success'\r\n          });\r\n        } else {\r\n          throw new Error(res.result.msg);\r\n        }\r\n      } catch (error) {\r\n        uni.showToast({\r\n          title: error.message || '删除失败',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    \r\n    // 处理举报\r\n    async handleReport(message) {\r\n      if (!this.checkAuth()) return;\r\n      \r\n      uni.showActionSheet({\r\n        itemList: ['垃圾广告', '不当内容', '欺诈信息', '违规内容', '违法信息'],\r\n        success: async (res) => {\r\n          const reportTypes = ['SPAM', 'INAPPROPRIATE', 'FRAUD', 'VIOLATION', 'ILLEGAL'];\r\n          try {\r\n            const result = await uniCloud.callFunction({\r\n              name: 'reportHandler',\r\n              data: {\r\n                action: 'submit',\r\n                targetId: message._id,\r\n                type: reportTypes[res.tapIndex],\r\n                reason: '',\r\n                reporterId: uni.getStorageSync('userId'),\r\n                contentType: 'message'\r\n              }\r\n            });\r\n            \r\n            if (result.result.code === 0) {\r\n              uni.showToast({\r\n                title: '举报成功',\r\n                icon: 'success'\r\n              });\r\n            } else {\r\n              throw new Error(result.result.msg);\r\n            }\r\n          } catch (error) {\r\n            uni.showToast({\r\n              title: error.message || '举报失败',\r\n              icon: 'none'\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    checkAuth() {\r\n      // 实现检查用户权限的逻辑\r\n      return true; // 临时返回，实际实现需要根据实际情况判断\r\n    },\r\n    \r\n    // 格式化日期，返回更详细的时间信息\r\n    formatDate(timestamp) {\r\n      if (!timestamp) return '';\r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const isToday = now.toDateString() === date.toDateString();\r\n      \r\n      if (isToday) {\r\n        return '今天 ' + this.formatTime(timestamp);\r\n      }\r\n      \r\n      // 昨天\r\n      const yesterday = new Date(now);\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      if (yesterday.toDateString() === date.toDateString()) {\r\n        return '昨天 ' + this.formatTime(timestamp);\r\n      }\r\n      \r\n      // 一周内\r\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n      if (now - date < 7 * 24 * 60 * 60 * 1000) {\r\n        return weekDays[date.getDay()] + ' ' + this.formatTime(timestamp);\r\n      }\r\n      \r\n      // 其他日期\r\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${this.formatTime(timestamp)}`;\r\n    },\r\n    \r\n    // 将消息按时间分组\r\n    groupMessagesByTime() {\r\n      const grouped = [];\r\n      let currentDate = '';\r\n      let currentGroup = null;\r\n      \r\n      this.messages.forEach(message => {\r\n        const messageDate = this.getMessageDateHeader(message.sendTime);\r\n        \r\n        if (messageDate !== currentDate) {\r\n          currentDate = messageDate;\r\n          currentGroup = {\r\n            date: messageDate,\r\n            messages: []\r\n          };\r\n          grouped.push(currentGroup);\r\n        }\r\n        \r\n        currentGroup.messages.push(message);\r\n      });\r\n      \r\n      return grouped;\r\n    },\r\n    \r\n    // 获取消息日期头部\r\n    getMessageDateHeader(timestamp) {\r\n      if (!timestamp) return '未知时间';\r\n      \r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const diffDays = Math.floor((now - date) / (24 * 60 * 60 * 1000));\r\n      \r\n      if (diffDays === 0) {\r\n        return '今天 ' + this.formatTime(timestamp);\r\n      } else if (diffDays === 1) {\r\n        return '昨天 ' + this.formatTime(timestamp);\r\n      } else if (diffDays < 7) {\r\n        const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n        return weekDays[date.getDay()] + ' ' + this.formatTime(timestamp);\r\n      } else {\r\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${this.formatTime(timestamp)}`;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.nav-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  background-color: #fff;\r\n  border-bottom: 1rpx solid #eee;\r\n  position: relative;\r\n  height: 88rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.nav-title {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  pointer-events: none; /* 防止标题文本干扰返回按钮的点击 */\r\n}\r\n\r\n.message-list {\r\n  flex: 1;\r\n  padding: 20rpx;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  height: calc(100vh - 170rpx); /* 添加明确的高度 */\r\n}\r\n\r\n.message-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 20rpx;\r\n  align-items: flex-start;\r\n  position: relative;\r\n}\r\n\r\n.message-item.self {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.avatar {\r\n  width: 80rpx;\r\n  height: 80rpx;\r\n  border-radius: 50%;\r\n  margin: 0 20rpx;\r\n}\r\n\r\n.message-content {\r\n  max-width: 60%;\r\n  background-color: #fff;\r\n  padding: 20rpx;\r\n  border-radius: 10rpx;\r\n  position: relative;\r\n}\r\n\r\n.self .message-content {\r\n  background-color: #007AFF;\r\n}\r\n\r\n.message-text {\r\n  font-size: 28rpx;\r\n  line-height: 1.4;\r\n  word-break: break-all;\r\n}\r\n\r\n.self .message-text {\r\n  color: #fff;\r\n}\r\n\r\n.send-time {\r\n  display: none;\r\n}\r\n\r\n.self .send-time {\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.input-area {\r\n  display: flex;\r\n  padding: 20rpx;\r\n  background-color: #fff;\r\n  border-top: 1rpx solid #eee;\r\n}\r\n\r\n.input-area input {\r\n  flex: 1;\r\n  height: 72rpx;\r\n  background-color: #f5f5f5;\r\n  border-radius: 36rpx;\r\n  padding: 0 30rpx;\r\n  margin-right: 20rpx;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.send-btn {\r\n  width: 120rpx;\r\n  height: 72rpx;\r\n  line-height: 72rpx;\r\n  text-align: center;\r\n  background-color: #007AFF;\r\n  color: #fff;\r\n  border-radius: 36rpx;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.send-btn[disabled] {\r\n  background-color: #ccc;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80vh; /* 增加空状态高度 */\r\n  padding: 40rpx;\r\n  color: #999;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.empty-state text {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  padding: 20rpx 40rpx;\r\n  border-radius: 12rpx;\r\n  box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.nickname {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  margin-bottom: 4rpx;\r\n}\r\n\r\n.message-item.self .nickname {\r\n  display: none;\r\n}\r\n\r\n.message-item.self .message-content {\r\n  padding-right: 40rpx;\r\n}\r\n\r\n.message-item .report-btn,\r\n.report-icon {\r\n  display: none;\r\n}\r\n\r\n/* 添加或修改时间分隔符样式 */\r\n.time-divider {\r\n  text-align: center;\r\n  margin: 20rpx 0;\r\n  position: relative;\r\n}\r\n\r\n.time-divider text {\r\n  display: inline-block;\r\n  padding: 6rpx 16rpx;\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  border-radius: 10rpx;\r\n}\r\n</style> ","import mod from \"-!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./chat.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\Hbuilderx\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./chat.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1743160579727\n      var cssReload = require(\"D:/Hbuilderx/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}